<core:FragmentDefinition xmlns="sap.m" xmlns:f="sap.ui.layout.form" xmlns:core="sap.ui.core">
	<Dialog afterClose="onAfterCloseFragment" contentWidth="55%">
		<customHeader>
			<Bar class="custClassHeader">
				<contentMiddle>
					<Title class="custClsHeaderTitle" text="Part Price Details"/>
				</contentMiddle>
			</Bar>  
		</customHeader>
		<f:SimpleForm class="simpleFormTitle" editable="true" layout="ResponsiveGridLayout" labelSpanXL="4" labelSpanL="4" labelSpanM="6"
			labelSpanS="12" adjustLabelSpan="false" columnsXL="2" columnsL="2" columnsM="2" singleContainerFullSize="false" binding="{/}">
			<f:content>
				<core:Title text=""/>
				<Label text="Plant" design="Bold" required="true"/>
				<ComboBox required="true" selectedKey="{Plant}" items="{ModelSSUDigitization>/F4Plant}" selectionChange="onPlantCode"
					editable="{=${ModelSSUDigitization>/EditableFlag} &amp;&amp; !${DBExist}}" valueState="{path:'uiFields/MassValidation/PlantFlag',formatter:'.formattValidationError'}"
					valueStateText="{uiFields/MassValidation/PlantFlag}">
					<core:Item text="{ModelSSUDigitization>PlantCode}-{ModelSSUDigitization>PlantDesc}" key="{ModelSSUDigitization>PlantCode}"/>
				</ComboBox>
				<Label text="Part Number" design="Bold" required="true"/>
				<Input required="true" value="{PartNo}" showValueHelp="true" valueHelpRequest="onPartValueHelp"
					editable="{parts:[{path:'ModelSSUDigitization>/EditableFlag'},{path:'Plant'},{path:'DBExist'}],formatter:'.formatterPartEdit'}" submit="onSubmitPartNum"
					valueState="{path:'uiFields/MassValidation/PartNoFlag',formatter:'.formattValidationError'}" valueStateText="{uiFields/MassValidation/PartNoFlag}"></Input>
				<Label text="Part Description" design="Bold"/>
				<Text text="{PartDesc}" class="clsText"/>
				<Label required="true" text="Vendor Code" design="Bold"/>
				<Input required="true" value="{Vendor}" valueHelpRequest="onVendorValHelp" maxLength="14" submit="onSubmitVendorCode"
				 editable="{parts:[{path:'ModelSSUDigitization>/EditableFlag'},{path:'PartNo'},{path:'DBExist'}],formatter:'.formatterPartEdit'}" showValueHelp="true"
					valueState="{path:'uiFields/MassValidation/VendorFlag',formatter:'.formattValidationError'}" valueStateText="{uiFields/MassValidation/VendorFlag}"></Input>
				<Label text="Vendor Name" design="Bold"/>
				<Text text="{VName}" class="clsText"/>
				<Label text="Vendor Location" design="Bold"/>
				<Text text="{VLocation}" class="clsText"/>
				<Label text="P-Info Record" design="Bold"/>
				<Text text="{PirNo}" class="clsText"/>
				<Label required="true" text="Purchase Organisation" design="Bold"/>
				<Text required="true" text="{Purorg}" class="clsText"/>
				<!--<ComboBox selectedKey="{Purorg}" editable="{ModelSSUDigitization>/EditableFlag}" required="true">
					<core:Item text="INPO" key="INPO"/>
					<core:Item text="IUTN" key="IUTN"/>
				</ComboBox>-->
				<Label required="true" text="P-Info category" design="Bold"/>
				<ComboBox required="true" selectedKey="{Pinforcat}" items="{ModelSSUDigitization>/F4PinfoCategory}"
                    editable="{=${ModelSSUDigitization>/EditableFlag} &amp;&amp; !${DBExist}}" showSecondaryValues="false" selectionChange="onPinfoCat">
                    <core:ListItem text="{ModelSSUDigitization>PinfoCatText}" key="{ModelSSUDigitization>Pinforcat}" additionalText="{ModelSSUDigitization>ExtPrice}-{ModelSSUDigitization>ExtValidFrom}"/>
                </ComboBox>
				<!-- <Text text="{PinfoCatText}" class="clsText"/> -->
				<!--<ComboBox required="true" selectedKey="{Pinforcat}" editable="{ModelSSUDigitization>/EditableFlag}">
					<core:Item text="Standard" key="Standard"/>
					<core:Item text="Subcontracting" key="Subcontracting"/>
				</ComboBox>-->
				
				
				<core:Title text=""/>
				<Label text="Currency" design="Bold"/>
				<Text text="{Currency}" class="clsText"/>
				<Label text="Existing Price" design="Bold"/>
				<Text text="{ExtPrice}" class="clsText"/>
				<!--<Input required="true" value="{ExtPrice}" editable="{ModelSSUDigitization>/EditableFlag}" type="Number" liveChange="onCheckNumberLeng12"></Input>-->
				<Label text="Settled Price" design="Bold" required="true" wrapping="true"/>
				<Input id="id_settledPrice" required="true" value="{SettledPrice}" type="Number" valueState="{path:'uiFields/MassValidation/SettledPriceFlag',formatter:'.formattValidationError'}" 
				liveChange="onSettledSub" editable="{ModelSSUDigitization>/EditableFlag}"/>
				<!-- <VBox>
					<Input required="true" value="{SettledPrice}" type="Number" liveChange="onSettledSub" editable="{ModelSSUDigitization>/EditableFlag}"/>
					<ObjectStatus class="sapUiSmallMarginEnd boldcls" text="#Inclusive of Packaging &amp; Transport" state="Warning"/>
				</VBox> -->
				<Label text="Delta Price" design="Bold"/>
				<!-- <Text visible="{=${Sign}?true:false}" text="{Sign} VE" class="clsText"/> -->
				<Text text="{DeltaPrice}" class="clsText"/>
				
				<Label text="Change in percentage" design="Bold"/>
				<Text text="{path:'Sign',formatter:'formatterSetSign'}" class="clsText"/>
				<Text text="{ChgPrctng}" class="clsText"/>
				<!--<Input required="true" value="{ChgPrctng}" editable="{ModelSSUDigitization>/EditableFlag}"/>-->
				
				
				
				
				<Label text="Amendment Code" design="Bold" required="true"/>
				<Text required="true" text="{Amndcode}" class="clsText"/>
				<!-- <Input value="{Amndcode}" maxLength="3" editable="{ModelSSUDigitization>/EditableFlag}" valueHelpRequest="onPurcValueHelp"
					showValueHelp="true" liveChange="onPurChange" required="true"/> -->
				<Label text="Amendment Code Descrption" design="Bold" wrapping="true"/>
				<Text text="{AmndcodeDesc}" class="clsText"/>
				<!--<Input required="true" value="{AmndcodeDesc}" editable="{ModelSSUDigitization>/EditableFlag}"></Input>-->
				<!-- <Label text="Sign" design="Bold"/>
				<Text text="{Sign}" class="clsText"/> -->
				<!-- <Label text="Taxonomy" design="Bold"/>
				<Text text="{Taxonomy}" class="clsText"/> -->
				<!--<Input value="{Taxonomy}" maxLength="18" editable="{ModelSSUDigitization>/EditableFlag}"></Input>-->
				<!-- <Label text="Net Weight" design="Bold"/>
				<Input value="{NetWtUniit}" editable="{ModelSSUDigitization>/EditableFlag}"></Input> -->
				<!-- <Label text="FOREX/RM Details" design="Bold"/>
				<Text text="{PaperCode}" class="clsText"/> -->
				<!--<Input value="{PaperCode}" editable="{ModelSSUDigitization>/EditableFlag}"></Input>-->
				<Label text="Existing Valid From Date" design="Bold" wrapping="true"/>
				<!-- <Input value="{ValidFrom}" editable="{ModelSSUDigitization>/EditableFlag}"/> -->
				<DatePicker  displayFormat="dd.MM.YYYY"  valueFormat="yyyy-MM-dd" editable="false" id="id_existingfrom" change="onExistingFrom"
					value="{path:'ExtValidFrom', type:'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true }}"/>
					
				<Label required="true" text="Valid From Date" design="Bold"/>
				<!-- <Input value="{ValidFrom}" editable="{ModelSSUDigitization>/EditableFlag}"/> -->
				<DatePicker  maxDate="{uiFields/maxDate}" minDate="{uiFields/minDate}" id="id_validfrom" change="onValidFrom" required="true"  displayFormat="yyyy.MM.dd" 
				           editable="{ModelSSUDigitization>/EditableFlag}" valueFormat= "yyyy-MM-dd" 
					value="{path:'ValidFrom', type:'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true }}"
					valueState="{path:'uiFields/MassValidation/ValidFromFlag',formatter:'.formattValidationError'}" valueStateText="{uiFields/MassValidation/ValidFromFlag}"/>
				<Label text="Remarks" design="Bold"></Label>
				<!--<Input value="{Remarks}" editable="{ModelSSUDigitization>/EditableFlag}"></Input>-->
				<TextArea value="{Remarks}" editable="{ModelSSUDigitization>/EditableFlag}" growing="true" growingMaxLines="4"/>
			</f:content>
		</f:SimpleForm>
		<buttons>
			<Button class="clsErrBtnPopover" press="onErrMsgValueHelp" type="Emphasized" icon="{ModelDefaultDataSet>/Icon/messagePopupIcon}"/>
			<Button text="OK" press="onOkItemDetail" type="Accept" icon="{ModelDefaultDataSet>/Icon/acceptIcon}"
				visible="{ModelSSUDigitization>/EditableFlag}"></Button>
			<Button text="Cancel" press="onCancelDialog" type="Reject" icon="{ModelDefaultDataSet>/Icon/cancelIcon}"></Button>
		</buttons>
	</Dialog>
</core:FragmentDefinition>